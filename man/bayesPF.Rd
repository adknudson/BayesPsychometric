% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesPF.R
\name{bayesPF}
\alias{bayesPF}
\title{Fits a psychometric function}
\usage{
bayesPF(formula, data, link, chains = 1, iter = 2000, warmup = 1000,
  thin = 1, cores = 1, ..., sample = TRUE, return_stan_fit = FALSE)
}
\arguments{
\item{formula}{A formula that one would pass to `glm` or similar}

\item{data}{A data.frame or list}

\item{link}{A link function (either "logit" or "probit")}

\item{...}{Other parameters to be passed to `rstan::stan()`.}

\item{sample}{Whether to sample from the model or just build the model
without sampling}

\item{return_stan_fit}{Return the full model created by `rstan::stan()`.
Useful for debugging or using other `rstan` functions.}

\item{return_f2stan}{Return the data and parameters generated internally by
`f2stan()`. Useful for debugging.}
}
\description{
Fits a psychometric function
}
\examples{
# Load the data
data_binomial  <- Sample_Data_Binomial
data_bernoulli <- Sample_Data_Bernoulli

# Fit a full model using binomial response data. By default, it will only
# return the posterior samples for the coefficients
fit1.1 <- bayesPF(y|k ~ x1 + age + gender, data_binomial, "logit",
                  chains = 2, cores = 2, iter = 8000, warmup = 2000)

str(fit1.1)

# Fit a full model using binary response data. To get the fitted Stan
# model, specify `return_stan_fit = TRUE`. To get diagnostic information
# such as the Stan code and transformed data, specify `return_f2stan = TRUE`
fit1.2 <- bayesPF(y ~ x1 + age + gender, data_bernoulli, "probit",
                  return_f2stan = TRUE, return_stan_fit = TRUE)
str(fit1.2)
extract(fit1.2$fit)
}
